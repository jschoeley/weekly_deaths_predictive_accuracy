rm(list=ls())
setwd("C:/Users/srizzi/Dropbox/Covid/Jim excess mortality/SR/GAM Poisson")
library(data.table)
library(ggplot2)
library(mgcv)

# load data 
load('Denmark_Training_DataW28_21072020.RData')

load('Sweden_Training_DataW26_21072020.RData')

# subset training data for models
training.data.denmark <- data.dk.week[training == TRUE]
training.data.sweden  <- data.swe.week[training == TRUE]


# put double weights on recent observations
# w=2 for last 12 weeks of 2019 and first 9 weeks of 2020
#training.data.denmark$weights <- rep(0, length(training.data.denmark$deaths))
training.data.denmark[, weights := ifelse(year %in% 2008:2019, 1,1.5)]
training.data.denmark[year %in% 2019 & weeks_into_year %in% 40:52]$weights <- 1.5
training.data.denmark[year %in% 2020 & weeks_into_year %in% 0:9]$weights <- 1.5

training.data.sweden[, weights := ifelse(year %in% 2008:2019, 1,1.5)]
training.data.sweden[year %in% 2019 & weeks_into_year %in% 40:52]$weights <- 1.5
training.data.sweden[year %in% 2020 & weeks_into_year %in% 0:9]$weights <- 1.5


##Fit GAM QuasiPoisson
gam.poisson.denmark <- gam(
  deaths ~
    
    sex +
    
    # penalized spline for long term trend
    s(weeks_since_origin, bs = 'ps', by = sex, k=12) +

    
    # penalized spline for age effect
    s(start_of_age, bs = 'ps', by = sex, k=4) +
   
    
    # penalized cyclic spline for seasonality
     s(weeks_into_flu_year, bs = 'cp', by = sex, k=52) +
    
    # smooth interaction between age and seasonality
    #ti(weeks_into_flu_year, start_of_age, bs=c('cp', "ps"), by = sex) +
    
    # smooth interaction between age and long trend
    #ti(weeks_into_flu_year, weeks_since_origin,  bs=c('cp', "ps"), by = sex) +

    offset(log(exposures)),
  
  weights = weights/mean(weights),
  
  family = quasipoisson(link = 'log'), method="ML",

  data = training.data.denmark
)


# Model's checks
gam.poisson.denmark
plot(gam.poisson.denmark, residuals=T)

anova(gam.poisson.denmark)

summary(gam.poisson.denmark)
plot(gam.poisson.denmark, scale=0)
gam.check(gam.poisson.denmark)





gam.poisson.sweden <- gam(
  deaths ~
    
    sex + 
    
    
    # penalized spline for long term trend
    s(weeks_since_origin, bs = 'ps', by = sex, k=12) +
    
    # penalized spline for age effect
    s(start_of_age, bs = 'ps', by = sex, k=4) +
    
    # penalized cyclic spline for seasonality
    s(weeks_into_flu_year, bs = 'cp', by = sex, k=52) +
    
    # smooth interaction between age and seasonality
    #ti(weeks_into_flu_year, start_of_age, bs=c('cp', "ps"), by = sex) +
    
    # smooth interaction between age and long trend
    #ti(weeks_into_flu_year, weeks_since_origin, bs=c('cp', "ps"), by = sex) +
    
    
    # offset
    offset(log(exposures)),
  
  weights = weights/mean(weights),
  
  family = quasipoisson(link = 'log'), method="ML",
  
  data = training.data.sweden
)      

gam.check(gam.poisson.sweden)
     

################# Predict from these models

# predict from previous models
data.dk.week[,deaths.gam.Poisson := exp(predict(gam.poisson.denmark,newdata = .SD))]
data.dk.week[, country := 'Denmark']


data.swe.week[,deaths.gam.Poisson := exp(predict(gam.poisson.sweden,newdata = .SD))]
data.swe.week[, country := 'Sweden']


Final.results <- rbind(data.dk.week,data.swe.week)

# change to melt structure
Final.results <- melt.data.table(data = Final.results,
                                 measure.vars = c('deaths','deaths.gam.Poisson'),
                                 variable.name = 'model',value.name = 'deaths')

Final.results[model == 'deaths']$model <- 'observed'

x <- Final.results[country == 'Sweden' & model == 'observed']

save(Final.results, gam.poisson.denmark, gam.poisson.sweden, training.data.denmark, training.data.sweden,
     file = 'Final_results_17082020.RData')


# Load modeled and predicted data
load('Final_results_17082020.RData')

### Plots

fig.data <- Final.results[year == 2020 & country == "Denmark"]
fig <- ggplot(data = fig.data, aes(x = weeks_into_year))+
  geom_point(data = fig.data[model == 'observed'],aes(y = deaths, col = training))+
  geom_line(data = fig.data[model != 'observed'], aes(y = deaths, col = model))+
  facet_grid( age_group ~ sex,scales = 'free_y')+
  theme_minimal()
fig


dx_gam <- Final.results[year == 2020 & country == "Denmark" & model == "deaths.gam.Poisson"]
dx_gam[, deaths, by=.(age_group)]
dx_gam[, .(sum(deaths)), by=weeks_into_year][c(10:27)+1,]
plot(x=10:27, dx_gam[, .(sum(deaths)), by=weeks_into_year][c(10:27)+1,]$V1)
dx_gam_10_27 <- dx_gam[, .(sum(deaths)), by=weeks_into_year][c(10:27)+1,]$V1



dx_obs <- Final.results[year == 2020 & country == "Denmark" & model == "observed"]
dx_obs[, .(sum(deaths)), by=weeks_into_year][c(10:27)+1,]
plot(x=10:27, dx_obs[, .(sum(deaths)), by=weeks_into_year][c(10:27)+1,]$V1, type="l")
dx_obs_10_27 <- dx_obs[, .(sum(deaths)), by=weeks_into_year][c(10:27)+1,]$V1


plot(x=10:27, y= dx_obs_10_27 - dx_gam_10_27, type="l",
     ylab="Observed - GAM Predicted No. of Deaths",
     xlab="Weeks of Year 2020", main="Excess Deaths with GAM quasiPoisson",
     lwd=3)
abline(h=0)

excess <-  cumsum(dx_obs[, .(sum(deaths)), by=weeks_into_year][c(10:27)+1,]$V1) - 
           cumsum(dx_gam[, .(sum(deaths)), by=weeks_into_year][c(10:27)+1,]$V1)

excess_GAM_fig <- plot(x=10:27, excess, type="l",
                       ylab="Cumulative Observed - GAM Predicted No. of Deaths",
                       xlab="Weeks of Year 2020", main="Cumulative Excess Deaths with GAM quasiPoisson",
                       lwd=3)
abline(h=0)


#plotly::ggplotly(fig)

fig.data2 <- Final.results[training == TRUE & country == 'Denmark']
fig2 <- ggplot(data = fig.data2, aes(x = weeks_since_origin))+
  geom_point(data = fig.data2[model == 'observed'],aes(y = deaths, col = training), alpha = 1/10)+
  geom_line(data = fig.data2[model != 'observed'], aes(y = deaths, col = model))+
  facet_grid( age_group ~ country + sex,scales = 'free_y') +
  theme_minimal()
fig2
#plotly::ggplotly(fig2)









# Compare with MP's totals
 Denmark.forecast <- data.table(read.table(file = 'ForecastDK.txt',header = T))
 Denmark.forecast[,age.n:= cut(Age,c(seq(0,80,20),Inf),include.lowest = T,right = F)]
 
 new.data <- Denmark.forecast[, list(deaths.f =  sum(DeathF),deaths.m =  sum(DeathM)), by = list(Year, age.n)]
 new.data[, total := deaths.f  + deaths.m]

 
 sum(Denmark.forecast[Year == 2020]$DeathF + Denmark.forecast[Year == 2020]$DeathM)
 Final.results[year == 2020 & model == "deaths.gam.Poisson" & country == "Denmark", sum(deaths)]

 Denmark.forecast[Year == 2020, sum(DeathF + DeathM), by =  list(Age)]
 
 Final.results[year == 2020 & model == "deaths.gam.Poisson" & country == "Denmark", sum(deaths), by = list(age_group)]
 new.data[Year == 2020]

